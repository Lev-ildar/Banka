{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","aboutMe","Preloader","Post","item","message","likesCount","MyPosts","React","memo","console","log","postsElements","posts","map","p","createRef","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","validate","required","name","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,iBAAmB,wC,oBCArCD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,KAAO,sBAAsB,MAAQ,yB,oBCAhGD,EAAOC,QAAU,CAAC,KAAO,qB,uICyCVC,EAxCgB,SAACC,GAAW,IAAD,EAERC,oBAAS,GAFD,mBAEjCC,EAFiC,KAEvBC,EAFuB,OAGZF,mBAASD,EAAMI,QAHH,mBAGjCA,EAHiC,KAGzBC,EAHyB,KAKtCC,qBAAW,WACPD,EAAUL,EAAMI,UACjB,CAACJ,EAAMI,SAgBV,OACG,8BACOF,GACC,6BACC,0BAAMK,cAlBO,WACrBJ,GAAY,KAkBCH,EAAMI,QAAU,UAEzBF,GACG,6BACA,2BAAOM,SAdK,SAACC,GACpBJ,EAAUI,EAAEC,cAAcC,QAacC,WAAW,EACrCC,OApBS,WACvBV,GAAY,GACZH,EAAMc,aAAaV,IAmBLO,MAAOP,OCddW,EAjBK,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,QAASZ,EAA0B,EAA1BA,OAAQU,EAAkB,EAAlBA,aACrC,OAAKE,EAKH,6BACE,yBAAKC,UAAWC,IAAEC,kBACd,yBAAKC,IAAKJ,EAAQK,OAAOC,QACzB,kBAAC,EAAD,CAAwBlB,OAAQA,EAAQU,aAAcA,KAGxD,yBAAKG,UAAWC,IAAEC,kBAAkB,4BAAKH,EAAQO,WAV5C,kBAACC,EAAA,EAAD,O,4CCSEC,EAbF,SAACzB,GACZ,OACE,yBAAKiB,UAAWC,IAAEQ,MAChB,yBAAKN,IAAI,6FACRpB,EAAM2B,QACP,6BACE,8BAAO3B,EAAM4B,WAAb,Y,iCCFFC,EAAUC,IAAMC,MAAK,SAAA/B,GACvBgC,QAAQC,IAAI,UACZ,IAAIC,EACAlC,EAAMmC,MAAMC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAMV,QAASU,EAAEV,QAASC,WAAYS,EAAET,gBAE5CE,IAAMQ,YAO3B,OACI,yBAAKrB,UAAWC,IAAEqB,YACd,wCACA,kBAACC,EAAD,CAAqBC,SARb,SAACC,GACb1C,EAAM2C,QAAQD,EAAOE,gBAQjB,yBAAK3B,UAAWC,IAAEiB,OACbD,OAMXW,EAAcC,YAAiB,IAejCN,EAAsBO,YAAU,CAACC,KAAM,yBAAjBD,EAbL,SAAC/C,GAClB,OACI,0BAAMyC,SAAUzC,EAAMiD,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,YAAa,eAAgBC,SAAU,CAACC,IAAUV,GAAcW,KAAM,iBAEtG,6BACI,iDAQD3B,I,QCzBA4B,EAFUC,aAfD,SAACC,GACrB,MAAO,CACHxB,MAAOwB,EAAMC,YAAYzB,MACzBS,YAAae,EAAMC,YAAYhB,gBAIZ,SAACiB,GACxB,MAAO,CACHlB,QAAS,SAACC,GACNiB,EAASC,YAAqBlB,QAKjBc,CAA+C7B,GCNzDkC,EAVC,SAAC/D,GACb,OACI,6BACI,kBAAC,EAAD,CAAagB,QAAShB,EAAMgB,QAASZ,OAAQJ,EAAMI,OACtCU,aAAcd,EAAMc,eACjC,kBAAC,EAAD,Q,eCFNkD,E,4LAGE,IAAIC,EAASC,KAAKlE,MAAMmE,MAAMC,OAAOH,OACjCA,IACAA,EAASC,KAAKlE,MAAMqE,mBAEhBH,KAAKlE,MAAMsE,QAAQC,KAAK,UAGhCL,KAAKlE,MAAMwE,eAAeP,GAC1BC,KAAKlE,MAAMyE,UAAUR,K,+BAIrB,OACI,kBAAC,EAAD,iBAAaC,KAAKlE,MAAlB,CACSgB,QAASkD,KAAKlE,MAAMgB,QACpBZ,OAAQ8D,KAAKlE,MAAMI,OACnBU,aAAcoD,KAAKlE,MAAMc,oB,GAnBfgB,IAAM4C,WA+BtBC,sBACXjB,aARkB,SAACC,GAAD,MAAY,CAC9B3C,QAAS2C,EAAMC,YAAY5C,QAC3BZ,OAAQuD,EAAMC,YAAYxD,OAC1BiE,iBAAkBV,EAAMiB,KAAKX,OAC7BY,OAAQlB,EAAMiB,KAAKC,UAIO,CAACL,mBAAgBC,cAAW3D,mBACtDgE,IAFWH,CAGbX","file":"static/js/3.3e407f9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3e8dg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3-dRs\",\"item\":\"MyPosts_item__23ncD\",\"posts\":\"MyPosts_posts__1w3me\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__389hC\"};","import React, {useEffect, useState} from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status] );\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n\n    return (\n       <div>\n           { !editMode &&\n               <div>\n                <span onDoubleClick={ activateEditMode }>\n                    {props.status || \"-----\"}</span>\n                </div>}\n           {editMode &&\n               <div>\n               <input onChange={onStatusChange} autoFocus={true}\n                      onBlur={ deactivateEditMode }\n                      value={status}></input>\n                 </div>}\n           </div>\n    )\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n  if (!profile) {\n      return <Preloader/>\n  }\n\n    return (\n    <div>\n      <div className={s.descriptionBlock}>\n          <img src={profile.photos.large} />\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n      </div>\n\n        <div className={s.descriptionBlock}><h3>{profile.aboutMe}</h3></div>\n    </div>\n  )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n  return (\n    <div className={s.item}>\n      <img src='https://avatars.mds.yandex.net/get-pdb/1871571/518a9efc-e77c-461f-8a05-afd8b7c9d7c7/s800' />\n      {props.message}\n      <div>\n        <span>{props.likesCount} Like</span>\n      </div>\n    </div>\n\n  )\n}\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormControls/FormsControl\";\n\nconst MyPosts = React.memo(props => {\n    console.log(\"RENDER\");\n    let postsElements =\n        props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\n\n    let newPostElement = React.createRef();\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n    }\n\n\n    return (\n        <div className={s.postsBlock}>\n            <h3>My posts</h3>\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n});\n\nconst maxLength10 = maxLengthCreator(10)\n\nlet AddNewPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} placeholder={\"Post message\"} validate={[required, maxLength10]} name={\"newPostText\"} />\n                 </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\n\nexport default MyPosts;","import React from 'react';\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n}\n\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts) ;\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status}\n                         updateStatus={props.updateStatus} />\n            <MyPostsContainer />\n        </div>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if(!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\")\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n    });\n\nexport default compose(\n    connect (mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter,\n)(ProfileContainer);"],"sourceRoot":""}