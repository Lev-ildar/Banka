{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/dialogs-reducer.js","components/Users/users.module.css","assets/images/user.png","assets/images/preloader.svg","api/api.js","serviceWorker.js","components/Navbar/Navbar.jsx","components/Settings/Settings.jsx","components/News/News.jsx","components/Music/Music.jsx","components/utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","index.js","components/common/FormControls/FormsControl.jsx","components/common/Preloader/Preloader.js","components/common/FormControls/FormControls.module.css","components/common/Paginator/Paginator.module.css","components/utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["module","exports","initialState","messages","id","message","dialogs","name","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","active","Settings","props","News","Music","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","styles","paginator","onClick","p","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","alt","loginBlock","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","ProfileContainer","App","initializeApp","Suspense","fallback","path","render","component","AppContainer","withRouter","promise","Promise","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","placeholder","validators","text","validate","preloader","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.9361793b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1Ncem\",\"item\":\"Navbar_item__35dXX\",\"active\":\"Navbar_active__1UIzD\"};","const SEND_MESSAGE = 'SEND-MESSAGE';\n\nlet initialState = {\n    messages: [\n        {id: 1, message: 'Hi!'},\n        {id: 2, message: 'How are you?'},\n        {id: 3, message: 'Yo!'},\n        {id: 4, message: 'Yo!'},\n        {id: 5, message: 'Yo!'}\n    ],\n    dialogs: [\n        {id: 1, name: 'Dima'},\n        {id: 2, name: 'Andrey'},\n        {id: 3, name: 'Sveta'},\n        {id: 4, name: 'Sasha'},\n        {id: 5, name: 'Regina'},\n        {id: 6, name: 'Olya'},\n        {id: 7, name: 'Dusya'}\n    ],\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch (action.type) {\n            case SEND_MESSAGE:\n            let body = action.newMessageBody;\n            return  {\n                ...state,\n                messages: [...state.messages, {id: 6, message: body} ]\n            };\n        default:\n            return state;\n    }\n\n}\n\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\n\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1XBMb\",\"selectedPage\":\"users_selectedPage__891zH\"};","module.exports = __webpack_public_path__ + \"static/media/user.4a2803fb.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.715acee7.svg\";","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n    headers: {\n        \"API-KEY\": \"3b95f640-660b-4650-b0e4-f8f0fcdcec32\"\n    }\n});\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`, {\n            withCredentials: true\n        })\n            .then(response => {\n                return response.data;\n            });\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId) {\n        console.warn(`Obsolete method. Use profileAPI`)\n        return profileAPI.getProfile(userId);\n    },\n}\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, { status: status });\n    }\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login`, { email, password, rememberMe });\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Navbar = () => {\n    return <nav className={s.nav}>\n        <div className={s.item}>\n            <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\n        </div>\n        <div className={`${s.item} ${s.active}`}>\n            <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\n        </div>\n        <div className={`${s.item} ${s.active}`}>\n            <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\n        </div>\n        <div className={s.item}>\n            <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\n        </div>\n        <div className={s.item}>\n            <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\n        </div>\n        <div className={s.item}>\n            <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\n        </div>\n    </nav>\n}\n\nexport default Navbar;","import React from 'react';\nimport s from './Settings.module.css';\n\nconst  Settings = (props) => {\n    return (\n        <div>\n            Settings\n        </div>\n    )\n}\nexport default Settings;","import React from 'react';\nimport s from './News.module.css';\n\nconst  News = (props) => {\n    return (\n        <div>\n            News\n        </div>\n    )\n}\nexport default News;","import React from 'react';\nimport s from './Music.module.css';\n\nconst  Music = (props) => {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\nexport default Music;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../components/utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst FOLLOWING_IN_PROGRESS = 'FOLLOWING_IN_PROGRESS';\n\nlet initialState = {\n    users: [ ],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\n            }\n        case SET_USERS: {\n            return  {...state, users: [...action.users]}\n        }\n        case SET_CURRENT_PAGE: {\n            return  {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return  {...state, totalUsersCount: action.count}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return  {...state, isFetching: action.isFetching}\n        }\n        case FOLLOWING_IN_PROGRESS: {\n            return  {...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId })\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId })\nexport const setUsers = (users) => ({type: SET_USERS, users })\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage })\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching })\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: FOLLOWING_IN_PROGRESS, isFetching, userId })\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n\n    if (response.data.resultCode == 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n    }\n}\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n    }\n}\n\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from 'classnames';\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => { unfollow(user.id) }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => { follow(user.id) }}>\r\n                                Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\n\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\n    return <div>\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\n        <div>\n            {\n                users.map(u => <User user={u}\n                                     followingInProgress={props.followingInProgress}\n                                     key={u.id}\n                                     unfollow={props.unfollow}\n                                     follow={props.follow}\n                    />\n                )\n            }\n        </div>\n    </div>\n}\n\nexport default Users;","import {createSelector} from \"reselect\";\n\nconst getUsersSelector = (state) => {\n    return state.usersPage.users;\n}\n\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n    return users.filter(u => true);\n})\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n}\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount;\n}\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n}\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n    follow, requestUsers,\n    setCurrentPage, toggleFollowingProgress,\n    unfollow\n} from '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount, getUsers,\n} from \"../../redux/users-selectors\";\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.getUsers(currentPage, pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        const {pageSize} = this.props;\n        this.props.getUsers(pageNumber, pageSize);\n    }\n\n    render() {\n        return <>\n            { this.props.isFetching ? <Preloader/> : null }\n            <Users totalUsersCount={this.props.totalUsersCount}\n                      pageSize={this.props.pageSize}\n                      currentPage={this.props.currentPage}\n                      onPageChanged={this.onPageChanged}\n                      users={this.props.users}\n                      follow={this.props.follow}\n                      unfollow={this.props.unfollow}\n                      followingInProgress={this.props.followingInProgress}\n        />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state),\n\n    }\n}\n\nexport default compose(\n    connect (mapStateToProps,{follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers })\n)(UsersContainer)","import React from 'react';\nimport s from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n    return <header className={s.header}>\n        <img src='https://avatars.mds.yandex.net/get-pdb/1909671/408e1419-9d03-4b41-a3ae-dfd3a0ce762b/s1200?webp=false' alt=\"logo\"/>\n\n        <div className={s.loginBlock}>\n            { props.isAuth ?\n                <div>{props.login} <button onClick={props.logout}>Log out</button></div>\n                : <NavLink to={'/login'}>Login</NavLink>}\n        </div>\n\n    </header>\n}\n\nexport default Header;","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_USER_DATA, payload: {userId, email, login, isAuth}})\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n            if (response.data.resultCode === 0) {\n                let {id, login, email} = response.data.data;\n                dispatch(setAuthUserData(id, email, login, true));\n            }\n}\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe);\n            if (response.data.resultCode === 0) {\n                dispatch(getAuthUserData())\n            } else {\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n                dispatch(stopSubmit(\"login\", {_error: message}));\n            }\n}\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout()\n            if (response.data.resultCode === 0) {\n                dispatch(setAuthUserData(null, null, null, false));\n            }\n}\n\nexport default authReducer;","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\n\nclass HeaderContainer extends React.Component {\n\n    render() {\n\n        return <Header {...this.props} />\n    }\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n});\nexport default connect(mapStateToProps, {logout}) (HeaderContainer);","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../components/common/FormControls/FormsControl\";\nimport {required} from \"../components/utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {login} from \"../redux/auth-reducer\";\nimport style from \"../components/common/FormControls/FormControls.module.css\"\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField(\"Email\", \"email\", [required], Input)}\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\n\n            {error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"} />\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit}/>\n    </div>\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\nexport default connect (mapStateToProps, {login}) (Login);","import {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n        default:\n            return state;\n    }\n}\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n    Promise.all([promise]).then( () => {\n        dispatch(initializedSuccess());\n    });\n}\n\n\nexport default appReducer;","let initialState = {};\n\nconst sidebarReducer = (state = initialState, action) => {\n\n    return state;\n}\n\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer } from 'redux-form';\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nwindow.store = store;\n\nexport default store;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Settings from \"./components/Settings/Settings\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n                <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <React.Suspense fallback={<Preloader/>}>\n                    <Route path='/dialogs'\n                           render={() => <DialogsContainer/>}/>\n                    <Route path='/profile/:userId?'\n                           render={() => <ProfileContainer/>}/>\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n                    <Route path='/login'\n                           render={() => <Login/>}/>\n                    <Route path='/music' component={Music}/>\n                    <Route path='/news' component={News}/>\n                    <Route path='/settings' component={Settings}/>\n                    </React.Suspense>\n                </div>\n            </div>\n                    );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect (mapStateToProps, {initializeApp})) (App);\n\nconst MainApp = (props) => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default MainApp;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from \"./App\";\n\nReactDOM.render(\n    <MainApp />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport styles from \"./FormControls.module.css\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}> <textarea {...input} {...restProps} /></FormControl>\n}\nexport const Input = (props) => {\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder} name={name}\n               validate={validators}\n               component={component}\n               {...props}\n        /> {text}\n    </div>\n)","import preloader from \"../../../assets/images/preloader.svg\";\nimport React from \"react\";\n\nlet Preloader = (props) => {\n    return <img src={preloader}/>\n}\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3irMB\",\"error\":\"FormControls_error__2LHCw\",\"formSummaryError\":\"FormControls_formSummaryError__22znV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__32s8w\",\"paginator\":\"Paginator_paginator__Ns0x1\",\"pageNumber\":\"Paginator_pageNumber__X4V4L\"};","export const required = value => {\n    if (value) return undefined;\n\n    return \"Field is required\";\n}\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__35LNZ\",\"loginBlock\":\"Header_loginBlock__2fk1x\"};","import {authAPI, profileAPI, usersAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hi, how are you?', likesCount: 15},\n        {id: 2, message: 'It\\'s my first post', likesCount: 30},\n        {id: 3, message: 'Bla bla', likesCount: 11},\n        {id: 4, message: 'Da dad dadad', likesCount: 10}\n    ],\n    profile: null,\n    status: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: ''\n            };\n    }\n\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n        case DELETE_POST: {\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\n        }\n    default:\n        return state;\n    }\n\n}\n\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\nexport const setStatus = (status) => ({type: SET_STATUS, status})\n//export const deletePost = (postId) => ({type: DELETE_POST, postId})\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let response = await usersAPI.getProfile(userId)\n            dispatch(setUserProfile(response.data));\n       }\n\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId)\n            dispatch(setStatus(response.data));\n}\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status)\n            if (response.data.resultCode === 0) {\n                dispatch(setStatus(status));\n            }\n}\n\n\nexport default profileReducer;"],"sourceRoot":""}