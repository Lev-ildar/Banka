{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","dialogs","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogElements","map","d","key","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,aAAe,gC,+FCW3MC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAO,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACtC,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCCnBC,EALC,SAACT,GACb,OAAO,yBAAKG,UAAWC,IAAEM,SAAUV,EAAMW,U,iCCgCvCC,EAAcC,YAAiB,IAe/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAbL,SAACf,GACpB,OACI,0BAAMiB,SAAUjB,EAAMkB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAcJ,KAAK,iBAAiBgB,YAAY,wBAEjG,6BACA,6CAQDC,EA7CC,SAACzB,GAEb,IAAI0B,EAAQ1B,EAAM2B,YACdC,EAAiBF,EAAMhB,QAAQmB,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMuB,IAAKD,EAAE5B,GAAIA,GAAI4B,EAAE5B,QACnF8B,EAAmBN,EAAMO,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAEhC,QAQnF,OAEI,yBAAKC,UAAWC,IAAEM,SACd,yBAAKP,UAAWC,IAAE+B,cACbP,GAEL,yBAAKzB,UAAWC,IAAE6B,UACd,6BAAMD,IAEV,kBAAClB,EAAD,CAAqBG,SAdT,SAACmB,GACjBpC,EAAMqC,YAAYD,EAAOE,qB,wDCZ7BC,EAA6B,SAACb,GAAD,MAAY,CACzCc,OAAQd,EAAMe,KAAKD,S,OCiBRE,sBACXC,aAhBkB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACiB,GACtB,MAAO,CACHP,YAAa,SAACC,GACVM,EAASC,YAAmBP,UDRR,SAACQ,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKhD,MAAMwC,OACT,kBAACM,EAAcE,KAAKhD,OADI,kBAAC,IAAD,CAAUO,GAAI,eAHV,GACX0C,IAAMH,WAUlC,OAFqCH,YAAQJ,EAARI,CAAoCI,KCKlEL,CAGbjB","file":"static/js/4.a12fcb7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2w2MK\",\"dialogsItems\":\"Dialogs_dialogsItems__KQUcc\",\"active\":\"Dialogs_active__amftd\",\"messages\":\"Dialogs_messages__jNHbo\",\"message\":\"Dialogs_message__2sitp\",\"dialogsBlock\":\"Dialogs_dialogsBlock__2rCV7\"};","import React from 'react';\nimport s from './../Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    let path = \"/dialogs/\" + props.id;\n    return <div className={s.dialog + ' ' + s.active}>\n        <NavLink to={path}>{props.name}</NavLink>\n    </div>\n}\n\n\nexport default DialogItem;","import React from 'react';\nimport s from './../Dialogs.module.css';\n\nconst Message = (props) => {\n    return <div className={s.dialogs}>{props.message}</div>\n}\n\n\nexport default Message;","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from \"./Message/Message\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../utils/validators/validators\";\nimport {Textarea} from \"../common/FormControls/FormsControl\";\n\nconst Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n    let dialogElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\n   // let newMessageBody = state.newMessageBody;\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    }\n\n\n    return (\n\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogElements}\n            </div>\n            <div className={s.messages}>\n                <div>{messagesElements}</div>\n                </div>\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\n            </div>\n\n\n    )\n}\n\nconst maxLength50 = maxLengthCreator(50)\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} validate={[required, maxLength50]} name=\"newMessageBody\" placeholder=\"Enter your message\" />\n            </div>\n                <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"}) (AddMessageForm);\n\nexport default Dialogs;","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\n            return <Component {...this.props} />\n        }\n    }\n\n\n        let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n        return ConnectedAuthRedirectComponent;\n}","import React from 'react';\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody));\n        },\n    }\n}\n\n\nexport default compose(\n    connect (mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}